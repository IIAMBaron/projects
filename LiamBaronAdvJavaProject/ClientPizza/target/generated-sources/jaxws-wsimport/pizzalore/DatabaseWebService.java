
package pizzalore;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DatabaseWebService", targetNamespace = "http://pizzaLore/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DatabaseWebService {


    /**
     * 
     * @param streetName
     * @param city
     * @param streetNum
     * @param suburb
     * @param table
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "address", targetNamespace = "http://pizzaLore/", className = "pizzalore.Address")
    @ResponseWrapper(localName = "addressResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.AddressResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/addressRequest", output = "http://pizzaLore/DatabaseWebService/addressResponse")
    public int address(
        @WebParam(name = "table", targetNamespace = "")
        String table,
        @WebParam(name = "streetNum", targetNamespace = "")
        String streetNum,
        @WebParam(name = "streetName", targetNamespace = "")
        String streetName,
        @WebParam(name = "suburb", targetNamespace = "")
        String suburb,
        @WebParam(name = "city", targetNamespace = "")
        String city);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://pizzaLore/", className = "pizzalore.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.LoginResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/loginRequest", output = "http://pizzaLore/DatabaseWebService/loginResponse")
    public String login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prodTypes", targetNamespace = "http://pizzaLore/", className = "pizzalore.ProdTypes")
    @ResponseWrapper(localName = "prodTypesResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.ProdTypesResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/prodTypesRequest", output = "http://pizzaLore/DatabaseWebService/prodTypesResponse")
    public List<String> prodTypes();

    /**
     * 
     * @param mode
     * @param pay
     * @param orderDate
     * @param table
     * @param addressID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "orderInfo", targetNamespace = "http://pizzaLore/", className = "pizzalore.OrderInfo")
    @ResponseWrapper(localName = "orderInfoResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.OrderInfoResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/orderInfoRequest", output = "http://pizzaLore/DatabaseWebService/orderInfoResponse")
    public int orderInfo(
        @WebParam(name = "table", targetNamespace = "")
        String table,
        @WebParam(name = "orderDate", targetNamespace = "")
        String orderDate,
        @WebParam(name = "mode", targetNamespace = "")
        String mode,
        @WebParam(name = "pay", targetNamespace = "")
        int pay,
        @WebParam(name = "addressID", targetNamespace = "")
        int addressID);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "products", targetNamespace = "http://pizzaLore/", className = "pizzalore.Products")
    @ResponseWrapper(localName = "productsResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.ProductsResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/productsRequest", output = "http://pizzaLore/DatabaseWebService/productsResponse")
    public List<String> products();

    /**
     * 
     * @param prodType
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "homePage", targetNamespace = "http://pizzaLore/", className = "pizzalore.HomePage")
    @ResponseWrapper(localName = "homePageResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.HomePageResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/homePageRequest", output = "http://pizzaLore/DatabaseWebService/homePageResponse")
    public List<String> homePage(
        @WebParam(name = "prodType", targetNamespace = "")
        String prodType);

    /**
     * 
     * @param hashProdQuantity
     * @param orderID
     * @param hashID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "orderDetails", targetNamespace = "http://pizzaLore/", className = "pizzalore.OrderDetails")
    @ResponseWrapper(localName = "orderDetailsResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.OrderDetailsResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/orderDetailsRequest", output = "http://pizzaLore/DatabaseWebService/orderDetailsResponse")
    public String orderDetails(
        @WebParam(name = "orderID", targetNamespace = "")
        int orderID,
        @WebParam(name = "hashID", targetNamespace = "")
        Object hashID,
        @WebParam(name = "hashProdQuantity", targetNamespace = "")
        Object hashProdQuantity);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sales", targetNamespace = "http://pizzaLore/", className = "pizzalore.Sales")
    @ResponseWrapper(localName = "salesResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.SalesResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/salesRequest", output = "http://pizzaLore/DatabaseWebService/salesResponse")
    public List<String> sales();

    /**
     * 
     * @param price
     * @param imageLoc
     * @param name
     * @param type
     * @param table
     * @param desc
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProduct", targetNamespace = "http://pizzaLore/", className = "pizzalore.AddProduct")
    @ResponseWrapper(localName = "addProductResponse", targetNamespace = "http://pizzaLore/", className = "pizzalore.AddProductResponse")
    @Action(input = "http://pizzaLore/DatabaseWebService/addProductRequest", output = "http://pizzaLore/DatabaseWebService/addProductResponse")
    public String addProduct(
        @WebParam(name = "table", targetNamespace = "")
        String table,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "price", targetNamespace = "")
        double price,
        @WebParam(name = "desc", targetNamespace = "")
        String desc,
        @WebParam(name = "imageLoc", targetNamespace = "")
        String imageLoc,
        @WebParam(name = "type", targetNamespace = "")
        int type);

}
